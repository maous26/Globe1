{"ast":null,"code":"var _jsxFileName = \"/Users/moussa/globegenius/client/src/components/routing/AdminRoute.js\",\n  _s = $RefreshSig$();\n// client/src/components/routing/AdminRoute.js\nimport React from 'react';\nimport { Outlet, Navigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = () => {\n  _s();\n  const {\n    user,\n    loading,\n    isAuthenticated,\n    isAdmin\n  } = useAuth();\n\n  // Si authentification en cours, afficher un indicateur de chargement\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Vérifier si l'utilisateur est connecté et est admin\n  if (!isAuthenticated || !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_s(AdminRoute, \"JrbBbhY4pMAmyETkLZf2eqMvHUI=\", false, function () {\n  return [useAuth];\n});\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","Outlet","Navigate","useAuth","jsxDEV","_jsxDEV","AdminRoute","_s","user","loading","isAuthenticated","isAdmin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/Users/moussa/globegenius/client/src/components/routing/AdminRoute.js"],"sourcesContent":["// client/src/components/routing/AdminRoute.js\nimport React from 'react';\nimport { Outlet, Navigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst AdminRoute = () => {\n  const { user, loading, isAuthenticated, isAdmin } = useAuth();\n  \n  // Si authentification en cours, afficher un indicateur de chargement\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n  \n  // Vérifier si l'utilisateur est connecté et est admin\n  if (!isAuthenticated || !isAdmin) {\n    return <Navigate to=\"/login\" replace />;\n  }\n  \n  return <Outlet />;\n};\n\nexport default AdminRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGR,OAAO,CAAC,CAAC;;EAE7D;EACA,IAAIM,OAAO,EAAE;IACX,oBACEJ,OAAA;MAAKO,SAAS,EAAC,2CAA2C;MAAAC,QAAA,eACxDR,OAAA;QAAKO,SAAS,EAAC;MAA2E;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9F,CAAC;EAEV;;EAEA;EACA,IAAI,CAACP,eAAe,IAAI,CAACC,OAAO,EAAE;IAChC,oBAAON,OAAA,CAACH,QAAQ;MAACgB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,oBAAOZ,OAAA,CAACJ,MAAM;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACV,EAAA,CAlBID,UAAU;EAAA,QACsCH,OAAO;AAAA;AAAAiB,EAAA,GADvDd,UAAU;AAoBhB,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}